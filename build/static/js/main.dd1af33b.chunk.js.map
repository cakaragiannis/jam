{"version":3,"sources":["util/Spotify.js","Components/Banner/Banner.js","Components/Header/Header.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/SearchPane/SearchPane.js","Components/CreatePane/CreatePane.js","Components/Playlist/Playlist.js","Components/PlaylistsPane/PlaylistsPane.js","Components/Footer/Footer.js","Components/App/App.js","index.js"],"names":["accessToken","Spotify","getAccessToken","urlAccessToken","window","location","href","match","urlExpiresIn","expiresIn","Number","setTimeout","history","pushState","endpoint","search","term","headers","Authorization","fetch","then","response","json","jsonResponse","tracks","items","map","track","albumArt","album","images","url","name","release","release_date","artist","artists","explicit","id","uri","popularity","getPlaylists","playlist","coverImg","public","getPlaylistTracks","playlistId","item","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","uris","Banner","props","className","Header","isAuth","onClick","connect","SearchBar","placeholder","onChange","event","onTermChange","target","value","Track","alt","src","slice","isRemoval","onRemove","onAdd","SearchPane","searchResults","key","CreatePane","onNameChange","playlistTracks","onSave","Playlist","total","onImport","PlaylistsPane","spotifyPlaylists","playlistName","onRefresh","Footer","App","state","this","setState","find","playlistTrack","alert","push","filter","result","document","querySelectorAll","addTrack","updatePlaylistName","removeTrack","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"mWAAIA,G,MAAc,IAEZC,EAAU,CACdC,eADc,WAEZ,GAAIF,EACF,OAAOA,EAIT,IAAMG,EAAiBC,OAAOC,SAASC,KAAKC,MAAM,wBAC5CC,EAAeJ,OAAOC,SAASC,KAAKC,MAAM,sBAEhD,GAAIJ,GAAkBK,EAAc,CAClCR,EAAcG,EAAe,GAC7B,IAAMM,EAAsC,IAA1BC,OAAOF,EAAa,IAKtC,OAFAJ,OAAOO,YAAW,kBAAOX,EAAc,KAAKS,GAC5CL,OAAOQ,QAAQC,UAAU,eAAgB,KAAM,KACxCb,EAEP,IAEMc,EAAQ,2DAFG,mCAEH,6CADM,iCACN,qHAEdV,OAAOC,SAAWS,GAItBC,OA3Bc,SA2BPC,GACL,IAAMhB,EAAcC,EAAQC,iBACtBY,EAAQ,8CAA0CE,EAA1C,eACRC,EAAU,CAAEC,cAAc,UAAD,OAAYlB,IAE3C,OAAOmB,MAAML,EAAU,CAAEG,QAASA,IAC/BG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OACJA,EAAaC,OAAOC,MAAMC,KAAI,SAACC,GAC7B,MAAO,CACLC,SAAUD,EAAME,MAAMC,OAAO,GAAGC,IAC5BJ,EAAME,MAAMC,OAAO,GAAGC,IACtBJ,EAAME,MAAMC,OAAO,GAAGC,IAC1BF,MAAOF,EAAME,MAAMG,KACnBC,QAASN,EAAME,MAAMK,aACrBC,OAAQR,EAAMS,QAAQ,GAAGJ,KACzBK,SAAUV,EAAMU,SAChBC,GAAIX,EAAMW,GACVN,KAAML,EAAMK,KACZO,IAAKZ,EAAMY,IACXC,WAAYb,EAAMa,mBAM5BC,aArDc,WAsDZ,IAAMzC,EAAcC,EAAQC,iBAEtBe,EAAU,CAAEC,cAAc,UAAD,OAAYlB,IAE3C,OAAOmB,MAHU,mDAGM,CAAEF,QAASA,IAC/BG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OACJA,EAAaE,MACTF,EAAaE,MAAMC,KAAI,SAACgB,GACtB,MAAO,CACLC,SAAUD,EAASZ,OAAO,GAAGC,IAC7BC,KAAMU,EAASV,KACfR,OAAQkB,EAASlB,OACjBe,IAAKG,EAASH,IACdD,GAAII,EAASJ,GACbM,OAAQF,EAASE,WAGrB,OAIVC,kBA5Ec,SA4EIC,GAChB,IAAM9C,EAAcC,EAAQC,iBACtBY,EAAQ,+CAA2CgC,EAA3C,8BACR7B,EAAU,CAAEC,cAAc,UAAD,OAAYlB,IAE3C,OAAOmB,MAAML,EAAU,CAAEG,QAASA,IAC/BG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OACJA,EAAaE,MAAMC,KAAI,SAACqB,GACtB,MAAO,CACLnB,SAAUmB,EAAKpB,MAAME,MAAMC,OAAO,GAAGC,IACjCgB,EAAKpB,MAAME,MAAMC,OAAO,GAAGC,IAC3BgB,EAAKpB,MAAME,MAAMC,OAAO,GAAGC,IAC/BF,MAAOkB,EAAKpB,MAAME,MAAMG,KACxBC,QAASc,EAAKpB,MAAME,MAAMK,aAC1BC,OAAQY,EAAKpB,MAAMS,QAAQ,GAAGJ,KAC9BK,SAAUU,EAAKpB,MAAMU,SACrBC,GAAIS,EAAKpB,MAAMW,GACfN,KAAMe,EAAKpB,MAAMK,KACjBO,IAAKQ,EAAKpB,MAAMY,IAChBC,WAAYO,EAAKpB,MAAMa,mBAMjCQ,aAtGc,SAsGDhB,EAAMiB,GACjB,GAAKjB,GAASiB,EAAUC,OAAxB,CAIA,IAGIC,EAHEnD,EAAcC,EAAQC,iBACxBY,EAAW,gCACTG,EAAU,CAAEC,cAAc,UAAD,OAAYlB,IAG3C,OAAOmB,MAAML,EAAU,CAAEG,QAASA,IAC/BG,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GAIL,OAHA4B,EAAS5B,EAAae,GACtBxB,EAAQ,2CAAuCqC,EAAvC,cAEDhC,MAAML,EAAU,CACrBG,QAASA,EACTmC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEvB,KAAMA,MAE5BZ,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,IAAMuB,EAAavB,EAAae,GAGhC,OAFAxB,EAAQ,2CAAuCqC,EAAvC,sBAA2DL,EAA3D,WAED3B,MAAML,EAAU,CACrBG,QAASA,EACTmC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,KAAMP,eAO5BhD,I,MC9HAwD,MAff,SAAgBC,GACd,OACE,yBAAKC,UAAU,UACb,4BACE,oCACA,qCACA,oCACA,sCACA,qCAEF,sC,MCQSC,MAlBf,SAAgBF,GACd,OACE,yBAAKC,UAAU,aACb,gCACE,oCACA,kCACM,yCACJ,sCAEF,uBAAGA,UAAU,UAAb,uEAGCD,EAAMG,OAAS,GAAK,4BAAQC,QAASJ,EAAMK,SAAvB,c,MCDdC,MAXf,SAAmBN,GACjB,OACE,yBAAKC,UAAU,aACb,2BACEM,YAAY,mCACZC,SAAU,SAAAC,GAAK,OAAIT,EAAMU,aAAaD,EAAME,OAAOC,Y,KCkC5CC,MAvCf,SAAeb,GACb,OACE,yBAAKC,UAAU,SACb,yBACEA,UAAU,QACVa,IAAKd,EAAM/B,MAAME,MACjB4C,IAAKf,EAAM/B,MAAMC,WAEnB,+BACE,+BACE,4BACE,4BAAK8B,EAAM/B,MAAMK,OAEnB,4BACE,4BAAK0B,EAAM/B,MAAME,QAEnB,4BACE,4BAAK6B,EAAM/B,MAAMQ,SAEnB,4BACE,4BACGuB,EAAM/B,MAAMM,QAAQyC,MAAM,EAAG,GAC7BhB,EAAM/B,MAAMU,SAAW,0CAAwB,GAC/CqB,EAAM/B,MAAMa,WAAa,GAAK,yCAAuB,OAK7DkB,EAAMiB,UACL,4BAAQb,QAAS,kBAAMJ,EAAMkB,SAASlB,EAAM/B,SAA5C,QAIA,4BAAQmC,QAAS,kBAAMJ,EAAMmB,MAAMnB,EAAM/B,SAAzC,OCHOmD,MA7Bf,SAAoBpB,GAClB,OACE,6BACE,wCACCA,EAAMG,OACL,6BACE,kBAAC,EAAD,CAAWO,aAAc,SAACpD,GAAD,OAAU0C,EAAMU,aAAapD,MACrD0C,EAAMqB,cAAcrD,KAAI,SAACC,GAAD,OACvB,kBAAC,EAAD,CACEA,MAAOA,EACPqD,IAAKrD,EAAMW,GACXuC,MAAO,SAAClD,GAAD,OAAW+B,EAAMmB,MAAMlD,UAKpC,6BACE,sCACA,qFAEE,qCAFF,0ECqBKsD,MAxCf,SAAoBvB,GAClB,OACE,6BACE,wCACCA,EAAMG,OACL,6BACE,2BACEI,YAAY,aACZC,SAAU,SAACC,GAAD,OAAWT,EAAMwB,aAAaf,EAAME,OAAOC,UAEvD,6BACGZ,EAAMyB,eAAezD,KAAI,SAACC,GAAD,OACxB,kBAAC,EAAD,CACEA,MAAOA,EACPqD,IAAKrD,EAAMW,GACXqC,WAAW,EACXC,SAAU,SAACjD,GAAD,OAAW+B,EAAMkB,SAASjD,UAIzC+B,EAAMyB,eAAejC,OAAS,EAC7B,4BAAQS,UAAU,UAAUG,QAASJ,EAAM0B,QAA3C,mBAIA,IAIJ,6BACE,+CACA,yK,MCMKC,MApCf,SAAkB3B,GAChB,OACE,yBAAKC,UAAU,YACb,yBACEA,UAAU,QACVa,IAAKd,EAAMhB,SAASV,KACpByC,IAAKf,EAAMhB,SAASC,WAEtB,+BACE,+BACE,4BACE,4BAAKe,EAAMhB,SAASV,OAEtB,4BACE,4BACG0B,EAAMhB,SAASlB,OAAO8D,MAAQ,EAA9B,UACM5B,EAAMhB,SAASlB,OAAO8D,MAD5B,qBAEM5B,EAAMhB,SAASlB,OAAO8D,MAF5B,YAKL,4BACE,6BACoB,IAAjB5B,EAAMd,OAAmB,mBAAqB,sBAKvD,4BACEkB,QAAS,kBAAMJ,EAAM6B,SAAS7B,EAAMhB,SAASV,KAAM0B,EAAMhB,SAASJ,MADpE,YCMSkD,MAlCf,SAAuB9B,GACrB,OACE,yBAAKC,UAAU,iBACb,2CACCD,EAAMG,OACL,6BACE,mDACsB,sCAErBH,EAAM+B,iBAAiB/D,KAAI,SAACgB,GAAD,OAC1B,kBAAC,EAAD,CACEA,SAAUA,EACVsC,IAAKtC,EAASJ,GACdiD,SAAU,SAACG,EAAc5C,GAAf,OACRY,EAAM6B,SAASG,EAAc5C,SAInC,4BAAQa,UAAU,aAAaG,QAAS,kBAAMJ,EAAMiC,cAApD,YAKF,6BACE,sCACA,4K,MCbKC,MAZf,SAAgBlC,GACd,OACE,gCAEIA,EAAMG,OACN,4CAAiB,uBAAGvD,KAAK,wCAAR,+BACjB,6CAAkB,qCAAlB,sBCgIOuF,E,kDA7Hb,WAAYnC,GAAQ,IAAD,8BACjB,cAAMA,IACDoC,MAAQ,CACXjC,QAAQ,EACRkB,cAAe,GACfW,aAAc,GACdP,eAAgB,GAChBM,iBAAkB,IAPH,E,6DAYjBxF,EAAQC,iBACR6F,KAAKC,SAAS,CACZnC,QAAQ,IAEVkC,KAAKtD,iB,6BAGAzB,GAAO,IAAD,OACXf,EAAQc,OAAOC,GAAMI,MAAK,SAAC2D,GAAD,OACxB,EAAKiB,SAAS,CAAEjB,cAAeA,S,qCAInB,IAAD,OACb9E,EAAQwC,eAAerB,MAAK,SAACqE,GAAD,OAC1B,EAAKO,SAAS,CAAEP,iBAAkBA,S,wCAIpBC,EAAc5C,GAAa,IAAD,OAC1C7C,EAAQ4C,kBAAkBC,GAAY1B,MAAK,SAAC+D,GAAD,OACzC,EAAKa,SAAS,CAAEb,eAAgBA,S,yCAIjBnD,GACjB+D,KAAKC,SAAS,CAAEN,aAAc1D,M,+BAGvBL,GACP,IAAMwD,EAAiBY,KAAKD,MAAMX,eAC9BY,KAAKD,MAAMX,eACX,GAEJ,GAAIA,EAAec,MAAK,SAACC,GAAD,OAAmBA,EAAc5D,KAAOX,EAAMW,MACpE6D,MAAM,4BADR,CAKAhB,EAAeiB,KAAKzE,GACpB,IAAMoD,EAAgBgB,KAAKD,MAAMf,cAAcsB,QAC7C,SAACC,GAAD,OAAYA,EAAOhE,KAAOX,EAAMW,MAGlCyD,KAAKC,SAAS,CACZb,eAAgBA,EAChBJ,cAAeA,O,kCAIPpD,GACV,IAAMwD,EAAiBY,KAAKD,MAAMX,eAAekB,QAC/C,SAACH,GAAD,OAAmBA,IAAkBvE,KAGvCoE,KAAKC,SAAS,CACZb,eAAgBA,M,mCAIPnD,GACX,GAAI+D,KAAKD,MAAMJ,aAAc,CAC3B,IAAMzC,EAAY8C,KAAKD,MAAMX,eAAezD,KAAI,SAACC,GAAD,OAAWA,EAAMY,OAC3DP,EAAO+D,KAAKD,MAAMJ,aAExBzF,EAAQ+C,aAAahB,EAAMiB,GAC3B8C,KAAKC,SAAS,CACZN,aAAc,GACdP,eAAgB,KAElBoB,SAASC,iBAAiB,SAAS,GAAGlC,MAAQ,QAE9C6B,MAAM,+B,+BAIA,IAAD,OACP,OACE,yBAAKxC,UAAWoC,KAAKD,MAAMjC,OAAS,MAAQ,cAC1C,kBAAC,EAAD,CACEA,OAAQkC,KAAKD,MAAMjC,OACnBE,QAAS,kBAAM,EAAK7D,oBAErB6F,KAAKD,MAAMjC,OAAS,GAAK,kBAAC,EAAD,MAC1B,8BACE,kBAAC,EAAD,CACEA,OAAQkC,KAAKD,MAAMjC,OACnBO,aAAc,SAACpD,GAAD,OAAU,EAAKD,OAAOC,IACpC+D,cAAegB,KAAKD,MAAMf,cAC1BF,MAAO,SAAClD,GAAD,OAAW,EAAK8E,SAAS9E,MAElC,kBAAC,EAAD,CACEkC,OAAQkC,KAAKD,MAAMjC,OACnBqB,aAAc,SAAClD,GAAD,OAAU,EAAK0E,mBAAmB1E,IAChDmD,eAAgBY,KAAKD,MAAMX,eAC3BP,SAAU,SAACjD,GAAD,OAAW,EAAKgF,YAAYhF,IACtCyD,OAAQ,kBAAM,EAAKpC,kBAErB,kBAAC,EAAD,CACEa,OAAQkC,KAAKD,MAAMjC,OACnB4B,iBAAkBM,KAAKD,MAAML,iBAC7BE,UAAW,kBAAM,EAAKlD,gBACtB8C,SAAU,SAACG,EAAc5C,GAAf,OACR,EAAKD,kBAAkB6C,EAAc5C,OAI3C,kBAAC,EAAD,CAAQe,OAAQkC,KAAKD,MAAMjC,c,GAxHjB+C,IAAMC,WCLxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJT,SAASU,eAAe,W","file":"static/js/main.dd1af33b.chunk.js","sourcesContent":["let accessToken = \"\";\r\n\r\nconst Spotify = {\r\n  getAccessToken() {\r\n    if (accessToken) {\r\n      return accessToken;\r\n    }\r\n\r\n    // Check for returned token & expire time in the address bar\r\n    const urlAccessToken = window.location.href.match(/access_token=([^&]*)/);\r\n    const urlExpiresIn = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n    if (urlAccessToken && urlExpiresIn) {\r\n      accessToken = urlAccessToken[1];\r\n      const expiresIn = Number(urlExpiresIn[1]) * 1000;\r\n\r\n      // Clear parameters & get another token after timeout\r\n      window.setTimeout(() => (accessToken = \"\"), expiresIn);\r\n      window.history.pushState(\"Access Token\", null, \"/\");\r\n      return accessToken;\r\n    } else {\r\n      const clientId = \"c1abc4771ddb45a0a370b5e35e8234c2\";\r\n      const redirectUri = \"http://wide-eyed-town.surge.sh\";\r\n      const endpoint = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&redirect_uri=${redirectUri}&scope=playlist-read-collaborative%20playlist-modify-private%20playlist-modify-public%20user-read-recently-played`;\r\n\r\n      window.location = endpoint;\r\n    }\r\n  },\r\n\r\n  search(term) {\r\n    const accessToken = Spotify.getAccessToken();\r\n    const endpoint = `https://api.spotify.com/v1/search?q=${term}&type=track`;\r\n    const headers = { Authorization: `Bearer ${accessToken}` };\r\n\r\n    return fetch(endpoint, { headers: headers })\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) =>\r\n        jsonResponse.tracks.items.map((track) => {\r\n          return {\r\n            albumArt: track.album.images[1].url\r\n              ? track.album.images[1].url\r\n              : track.album.images[0].url,\r\n            album: track.album.name,\r\n            release: track.album.release_date,\r\n            artist: track.artists[0].name,\r\n            explicit: track.explicit,\r\n            id: track.id,\r\n            name: track.name,\r\n            uri: track.uri,\r\n            popularity: track.popularity,\r\n          };\r\n        })\r\n      );\r\n  },\r\n\r\n  getPlaylists() {\r\n    const accessToken = Spotify.getAccessToken();\r\n    const endpoint = \"https://api.spotify.com/v1/me/playlists?limit=50\";\r\n    const headers = { Authorization: `Bearer ${accessToken}` };\r\n\r\n    return fetch(endpoint, { headers: headers })\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) =>\r\n        jsonResponse.items\r\n          ? jsonResponse.items.map((playlist) => {\r\n              return {\r\n                coverImg: playlist.images[0].url,\r\n                name: playlist.name,\r\n                tracks: playlist.tracks,\r\n                uri: playlist.uri,\r\n                id: playlist.id,\r\n                public: playlist.public,\r\n              };\r\n            })\r\n          : []\r\n      );\r\n  },\r\n\r\n  getPlaylistTracks(playlistId) {\r\n    const accessToken = Spotify.getAccessToken();\r\n    const endpoint = `https://api.spotify.com/v1/playlists/${playlistId}/tracks?fields=items.track`;\r\n    const headers = { Authorization: `Bearer ${accessToken}` };\r\n\r\n    return fetch(endpoint, { headers: headers })\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) =>\r\n        jsonResponse.items.map((item) => {\r\n          return {\r\n            albumArt: item.track.album.images[1].url\r\n              ? item.track.album.images[1].url\r\n              : item.track.album.images[0].url,\r\n            album: item.track.album.name,\r\n            release: item.track.album.release_date,\r\n            artist: item.track.artists[0].name,\r\n            explicit: item.track.explicit,\r\n            id: item.track.id,\r\n            name: item.track.name,\r\n            uri: item.track.uri,\r\n            popularity: item.track.popularity,\r\n          };\r\n        })\r\n      );\r\n  },\r\n\r\n  savePlaylist(name, trackUris) {\r\n    if (!name || !trackUris.length) {\r\n      return;\r\n    }\r\n\r\n    const accessToken = Spotify.getAccessToken();\r\n    let endpoint = \"https://api.spotify.com/v1/me\";\r\n    const headers = { Authorization: `Bearer ${accessToken}` };\r\n    let userId;\r\n\r\n    return fetch(endpoint, { headers: headers })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((jsonResponse) => {\r\n        userId = jsonResponse.id;\r\n        endpoint = `https://api.spotify.com/v1/users/${userId}/playlists`;\r\n\r\n        return fetch(endpoint, {\r\n          headers: headers,\r\n          method: \"POST\",\r\n          body: JSON.stringify({ name: name }),\r\n        })\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          .then((jsonResponse) => {\r\n            const playlistId = jsonResponse.id;\r\n            endpoint = `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`;\r\n\r\n            return fetch(endpoint, {\r\n              headers: headers,\r\n              method: \"POST\",\r\n              body: JSON.stringify({ uris: trackUris }),\r\n            });\r\n          });\r\n      });\r\n  },\r\n};\r\n\r\nexport default Spotify;\r\n","import React from \"react\";\r\nimport './Banner.css'\r\n\r\nfunction Banner(props) {\r\n  return (\r\n    <div className=\"Banner\">\r\n      <ul>\r\n        <li>SLOW</li>\r\n        <li>PARTY</li>\r\n        <li>YOUR</li>\r\n        <li>OFFICE</li>\r\n        <li>PUMP</li>\r\n      </ul>\r\n      <h1>JAM.</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <h1>JAM.</h1>\r\n        <p>\r\n          for <span>Spotify</span>\r\n          <sup>&copy;</sup>\r\n        </p>\r\n        <p className=\"hidden\">\r\n          Easy playlist creation for the world's favourite streaming service.\r\n        </p>\r\n        {props.isAuth ? \"\" : <button onClick={props.connect}>CONNECT</button>}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nfunction SearchBar(props) {\r\n  return (\r\n    <div className=\"SearchBar\">\r\n      <input\r\n        placeholder=\"Search track, artist or album...\"\r\n        onChange={event => props.onTermChange(event.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./Track.css\";\r\n\r\nfunction Track(props) {\r\n  return (\r\n    <div className=\"Track\">\r\n      <img\r\n        className=\"cover\"\r\n        alt={props.track.album}\r\n        src={props.track.albumArt}\r\n      />\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th>{props.track.name}</th>\r\n          </tr>\r\n          <tr>\r\n            <td>{props.track.album}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>{props.track.artist}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              {props.track.release.slice(0, 4)}\r\n              {props.track.explicit ? <span>EXPLICIT</span> : \"\"}\r\n              {props.track.popularity > 70 ? <span>POPULAR</span> : \"\"}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      {props.isRemoval ? (\r\n        <button onClick={() => props.onRemove(props.track)}>\r\n          &times;\r\n        </button>\r\n      ) : (\r\n        <button onClick={() => props.onAdd(props.track)}>&#43;</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Track;\r\n","import React from \"react\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport Track from \"../Track/Track\";\r\n\r\nfunction SearchPane(props) {\r\n  return (\r\n    <div>\r\n      <span>Search</span>\r\n      {props.isAuth ? (\r\n        <div>\r\n          <SearchBar onTermChange={(term) => props.onTermChange(term)} />\r\n          {props.searchResults.map((track) => (\r\n            <Track\r\n              track={track}\r\n              key={track.id}\r\n              onAdd={(track) => props.onAdd(track)}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2>Search</h2>\r\n          <p>\r\n            Find new and existing favourites with access to Spotify\r\n            <sup>&copy;</sup>'s entire collection of over 50 million songs,\r\n            albums and podcasts.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPane;\r\n","import React from \"react\";\r\nimport Track from \"../Track/Track\";\r\n\r\nfunction CreatePane(props) {\r\n  return (\r\n    <div>\r\n      <span>Create</span>\r\n      {props.isAuth ? (\r\n        <div>\r\n          <input\r\n            placeholder=\"New JAM...\"\r\n            onChange={(event) => props.onNameChange(event.target.value)}\r\n          />\r\n          <div>\r\n            {props.playlistTracks.map((track) => (\r\n              <Track\r\n                track={track}\r\n                key={track.id}\r\n                isRemoval={true}\r\n                onRemove={(track) => props.onRemove(track)}\r\n              />\r\n            ))}\r\n          </div>\r\n          {props.playlistTracks.length > 0 ? (\r\n            <button className=\"saveBtn\" onClick={props.onSave}>\r\n              Save to Spotify\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2>Create & Export</h2>\r\n          <p>\r\n            Craft the perfect soundtrack for any situation, on any device, anywhere. When you're done, export your masterpiece with just one click.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePane;\r\n","import React from \"react\";\r\nimport \"../Track/Track.css\";\r\nimport \"./Playlist.css\";\r\n\r\nfunction Playlist(props) {\r\n  return (\r\n    <div className=\"Playlist\">\r\n      <img\r\n        className=\"cover\"\r\n        alt={props.playlist.name}\r\n        src={props.playlist.coverImg}\r\n      />\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th>{props.playlist.name}</th>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              {props.playlist.tracks.total > 1\r\n                ? `${props.playlist.tracks.total} tracks`\r\n                : `${props.playlist.tracks.total} track`}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              {props.public === false ? \"Private playlist\" : \"Public playlist\"}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button\r\n        onClick={() => props.onImport(props.playlist.name, props.playlist.id)}\r\n      >\r\n        &#9776;\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Playlist;\r\n","import React from \"react\";\r\nimport Playlist from \"../Playlist/Playlist\";\r\n\r\nfunction PlaylistsPane(props) {\r\n  return (\r\n    <div className=\"PlaylistsPane\">\r\n      <span>Playlists</span>\r\n      {props.isAuth ? (\r\n        <div>\r\n          <h2>\r\n            Playlists on Spotify<sup>&copy;</sup>\r\n          </h2>\r\n          {props.spotifyPlaylists.map((playlist) => (\r\n            <Playlist\r\n              playlist={playlist}\r\n              key={playlist.id}\r\n              onImport={(playlistName, playlistId) =>\r\n                props.onImport(playlistName, playlistId)\r\n              }\r\n            />\r\n          ))}\r\n          <button className=\"refreshBtn\" onClick={() => props.onRefresh()}>\r\n            Refresh\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2>Import</h2>\r\n          <p>\r\n          JAM automatically imports up to 50 existing playlists. Use any playlist as a starting point for your new jam while preserving the old one. \r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaylistsPane;\r\n","import React from \"react\";\r\nimport './Footer.css';\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer>\r\n      {\r\n        props.isAuth ? \r\n        <p>Digging JAM.? <a href=\"https://github.com/cakaragiannis/jam\">Check out the source code.</a></p> :\r\n        <p>Connect Spotify<sup>&copy;</sup> to get started.</p>\r\n      }\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Spotify from \"../../util/Spotify\";\r\nimport Banner from \"../Banner/Banner\";\r\nimport Header from \"../Header/Header\";\r\nimport SearchPane from \"../SearchPane/SearchPane\";\r\nimport CreatePane from \"../CreatePane/CreatePane\";\r\nimport PlaylistsPane from \"../PlaylistsPane/PlaylistsPane\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAuth: false,\r\n      searchResults: [],\r\n      playlistName: \"\",\r\n      playlistTracks: [],\r\n      spotifyPlaylists: [],\r\n    };\r\n  }\r\n\r\n  getAccessToken() {\r\n    Spotify.getAccessToken();\r\n    this.setState({\r\n      isAuth: true,\r\n    });\r\n    this.getPlaylists();\r\n  }\r\n\r\n  search(term) {\r\n    Spotify.search(term).then((searchResults) =>\r\n      this.setState({ searchResults: searchResults })\r\n    );\r\n  }\r\n\r\n  getPlaylists() {\r\n    Spotify.getPlaylists().then((spotifyPlaylists) =>\r\n      this.setState({ spotifyPlaylists: spotifyPlaylists })\r\n    );\r\n  }\r\n\r\n  getPlaylistTracks(playlistName, playlistId) {\r\n    Spotify.getPlaylistTracks(playlistId).then((playlistTracks) =>\r\n      this.setState({ playlistTracks: playlistTracks })\r\n    );\r\n  }\r\n\r\n  updatePlaylistName(name) {\r\n    this.setState({ playlistName: name });\r\n  }\r\n\r\n  addTrack(track) {\r\n    const playlistTracks = this.state.playlistTracks\r\n      ? this.state.playlistTracks\r\n      : [];\r\n\r\n    if (playlistTracks.find((playlistTrack) => playlistTrack.id === track.id)) {\r\n      alert(\"Track already added.\");\r\n      return;\r\n    }\r\n\r\n    playlistTracks.push(track);\r\n    const searchResults = this.state.searchResults.filter(\r\n      (result) => result.id !== track.id\r\n    );\r\n\r\n    this.setState({\r\n      playlistTracks: playlistTracks,\r\n      searchResults: searchResults,\r\n    });\r\n  }\r\n\r\n  removeTrack(track) {\r\n    const playlistTracks = this.state.playlistTracks.filter(\r\n      (playlistTrack) => playlistTrack !== track\r\n    );\r\n\r\n    this.setState({\r\n      playlistTracks: playlistTracks,\r\n    });\r\n  }\r\n\r\n  savePlaylist(name) {\r\n    if (this.state.playlistName) {\r\n      const trackUris = this.state.playlistTracks.map((track) => track.uri);\r\n      const name = this.state.playlistName;\r\n\r\n      Spotify.savePlaylist(name, trackUris);\r\n      this.setState({\r\n        playlistName: \"\",\r\n        playlistTracks: [],\r\n      });\r\n      document.querySelectorAll(\"input\")[1].value = \"\";\r\n    } else {\r\n      alert(\"You didn't name your JAM.\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.state.isAuth ? \"App\" : \"App unauth\"}>\r\n        <Header\r\n          isAuth={this.state.isAuth}\r\n          connect={() => this.getAccessToken()}\r\n        />\r\n        {this.state.isAuth ? \"\" : <Banner />}\r\n        <main>\r\n          <SearchPane\r\n            isAuth={this.state.isAuth}\r\n            onTermChange={(term) => this.search(term)}\r\n            searchResults={this.state.searchResults}\r\n            onAdd={(track) => this.addTrack(track)}\r\n          />\r\n          <CreatePane\r\n            isAuth={this.state.isAuth}\r\n            onNameChange={(name) => this.updatePlaylistName(name)}\r\n            playlistTracks={this.state.playlistTracks}\r\n            onRemove={(track) => this.removeTrack(track)}\r\n            onSave={() => this.savePlaylist()}\r\n          />\r\n          <PlaylistsPane\r\n            isAuth={this.state.isAuth}\r\n            spotifyPlaylists={this.state.spotifyPlaylists}\r\n            onRefresh={() => this.getPlaylists()}\r\n            onImport={(playlistName, playlistId) =>\r\n              this.getPlaylistTracks(playlistName, playlistId)\r\n            }\r\n          />\r\n        </main>\r\n        <Footer isAuth={this.state.isAuth} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from '../src/Components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}